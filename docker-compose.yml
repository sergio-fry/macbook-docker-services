services:
  postgres:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      #POSTGRES_PASSWORD: postgres
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  i2p:
    image: geti2p/i2p
    profiles:
      ["donotstart"]
      #network_mode: host
    ports:
      - 4443:4443
      - 4445:4445
      - 6668:6668
      - 7654:7654
      - 7656:7656
      - 7657:7657
      - 7658:7658
      - 7659:7659
      - 7660:7660
      - 7652:7652
      - 7653:7653
      - 12345:12345
    volumes:
      - i2p_config:/i2p/.i2p
      - i2p_torrents:/i2psnark

  ipfs:
    image: ipfs/kubo
    profiles: ["donotstart"]
    volumes:
      - ipfs_staging:/export
      - ipfs_data:/data/ipfs
    ports:
      - 4001:4001
      - 8099:8080
      - 5001:5001

  selenoid:
    image: aerokube/selenoid:latest-release
    restart:
      always
      #profiles: ['donotstart']
    container_name: selenoid
    network_mode: bridge

    ports:
      - "4444:4444"
    environment:
      - "OVERRIDE_VIDEO_OUTPUT_DIR=$PWD/video"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./.volumes/selenoid/etc:/etc"
      - "./.volumes/selenoid/video:/opt/selenoid/video"
      - "./.volumes/selenoid/logs:/opt/selenoid/logs"
    command:
      [
        "-conf",
        "/etc/selenoid/browsers.json",
        "-limit",
        "20",
        "-retry-count",
        "1000",
        "-video-output-dir",
        "/opt/selenoid/video",
        "-log-output-dir",
        "/opt/selenoid/logs",
        "-max-timeout",
        "20m0s",
        "-session-attempt-timeout",
        "15m",
        "-timeout",
        "10m",
        "-service-startup-timeout",
        "10m",
      ]

  selenoid-ui:
    image: aerokube/selenoid-ui:latest-release
    restart: always
    network_mode: bridge
    container_name: selenoid-ui
    ports:
      - "8089:8080"
    links:
      - selenoid
    command: -selenoid-uri 'http://selenoid:4444'
    depends_on:
      - selenoid

  minio:
    image: "bitnami/minio:latest"
    restart: always
    volumes:
      - minio:/bitnami/minio/data
    ports:
      - "9000:9000"
      - "9011:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin

  samokat-proxy:
    image: udalov/forti_proxy
    profiles: ['donotstart']
    ports:
      - "8079:8080"
    environment:
      FORTI_HOST: sea.samokat.io
      FORTI_PORT: 54443
      FORTI_USER: serudalov
      FORTI_PASSWORD: byvwax-8suzja-woBwoj
      FORTI_CERT: 87e40f5df09fe31fe1666280eac72cce5703132175f35948ad3607c3e912ac29
      TINYPROXY_PASSWORD: pass2
    cap_add:
      - NET_ADMIN
    devices:
      - "/dev/net/tun:/dev/net/tun"
      - "dev/ppp:/dev/ppp"


  open-webui:
    image: ghcr.io/open-webui/open-webui:main

    restart: always
    volumes:
    - ./.volumes/open-webui:/app/backend/data
    ports:
      - 3099:8080

    extra_hosts:
      - host.docker.internal:host-gateway

  

volumes:
  postgres:
  redis:
  i2p_config:
  i2p_torrents:
  ipfs_staging:
  ipfs_data:
  minio:

networks:
  host_services:
