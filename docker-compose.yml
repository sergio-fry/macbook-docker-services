version: "3"


services:
  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      #POSTGRES_PASSWORD: postgres
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  i2p:
    image: geti2p/i2p
    profiles: ['donotstart']
      #network_mode: host
    ports:
      - 4443:4443
      - 4445:4445
      - 6668:6668
      - 7654:7654
      - 7656:7656
      - 7657:7657
      - 7658:7658
      - 7659:7659
      - 7660:7660
      - 7652:7652
      - 7653:7653
      - 12345:12345
    volumes:
      - i2p_config:/i2p/.i2p
      - i2p_torrents:/i2psnark

  ipfs:
    image: ipfs/kubo:v0.19.1
    profiles: ['donotstart']
    volumes:
      - ipfs_staging:/export
      - ipfs_data:/data/ipfs
    ports:
      - 4001:4001
      - 48080:8080
      - 5001:5001 

  selenoid:
    image: aerokube/selenoid:latest-release
      #profiles: ['donotstart']
    container_name: selenoid
    networks:
      - host_services
    ports:
      - "4444:4444"
    environment:
      - "OVERRIDE_VIDEO_OUTPUT_DIR=$PWD/video"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./.volumes/selenoid/etc:/etc"
      - "./.volumes/selenoid/video:/opt/selenoid/video"
      - "./.volumes/selenoid/logs:/opt/selenoid/logs"
    command: ["-conf", "/etc/selenoid/browsers.json", "-limit", "20", "-retry-count", "1000", "-video-output-dir", "/opt/selenoid/video", "-log-output-dir", "/opt/selenoid/logs", "-max-timeout", "20m0s", "-session-attempt-timeout", "15m", "-timeout", "10m",  "-service-startup-timeout", "10m"]


  selenoid-ui:
    image: aerokube/selenoid-ui:latest-release
    networks:
      - host_services
    container_name: selenoid-ui
    ports:
      - "8080:8080"
    links:
      - selenoid
    command: -selenoid-uri 'http://selenoid:4444'
    depends_on:
      - selenoid

volumes:
  postgres:
  redis:
  i2p_config:
  i2p_torrents:
  ipfs_staging:
  ipfs_data:


networks:
  host_services:
